<?php

/**
 * PersonaTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PersonaTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object PersonaTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Persona');
    }
    
    /**
     * Retorna un listado de los super administradores de la aplicaciÃ³n
     *
     * @return Array Persona
     */
    public static function getSuperAdmins()
    {
        return Doctrine_Core::getTable('Persona')->createQuery('p')
                ->leftJoin('p.PerfilesPersona tp')
                ->andWhere('tp.id_tipo_perfil = 3')
                ->execute();
    }
    
    /**
     * Retorna un listado de los administradores de las entidades educativas
     *
     * @return Array Persona
     */
    public static function getAdmins()
    {
        return Doctrine_Core::getTable('Persona')->createQuery('p')
                ->leftJoin('p.PerfilesPersona tp')
                ->andWhere('tp.id_tipo_perfil = 4')
                ->execute();
    }
    
    /**
     * Retorna un listado de los super administradores de la aplicaciÃ³n en
     * formato array[clave] = valor
     * 
     * @param Boolean $id Alterna entre el nombre o el identificador
     * @return Array 
     */
    public static function getArraySuperAdmins($id = false)
    {
        $superadmins = array();
        foreach(PersonaTable::getSuperAdmins() as $superadmin)
            if($id)
                $superadmins[$superadmin->getIdPersona()] = $superadmin->getIdPersona();
            else
                $superadmins[$superadmin->getIdPersona()] = $superadmin->getNombre();
        return $superadmins;
    }
    
    /**
     * Retorna un listado de los administradores de las entidades educativas en
     * formato array[clave] = valor
     * 
     * @param Boolean $id Alterna entre el nombre o el identificador
     * @return Array 
     */
    public static function getArrayAdmins($id = false)
    {
        $admins = array();
        foreach(PersonaTable::getAdmins() as $admin)
            if($id)
                $admins[$admin->getIdPersona()] = $admin->getIdPersona();
            else
                $admins[$admin->getIdPersona()] = $admin->getNombre();
        return $admins;
    }
}